name: API CI

on:
  push:
    paths:
      - "./api"
      - ".github/workflows/api-ci.yml"

jobs:
  unit-testing:
    runs-on: ubuntu-latest 
    defaults:
      run:
        working-directory: ./api 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./api/package-lock.json
      - name: Install dependencies
        run: npm ci 
      - name: run unit tests
        run: npm run test

  linter:
    runs-on: ubuntu-latest 
    defaults:
      run:
        working-directory: ./api 

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./api/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: run linter
        run: npm run lint

  e2e:
    runs-on: ubuntu-latest # 'ubuntu-latest' es generalmente preferido para trabajos con contenedores
    defaults:
      run:
        working-directory: ./api 
    container: 
      image: node:20
    services:
      mongo-e2e:
        image: mongo:4.4
        ports:
          - 27107:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test123

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: npm ci
    
    - name: run e2e
      run: npm run test:e2e

      env:
        MONGO_DB_NAME: demo
        MONGO_URL: mongodb://test:test123@mongo-e2e:27017?retryWrites=true&writeConcern=majority

#e